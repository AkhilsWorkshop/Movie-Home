{"version":3,"file":"static/js/612.3dfde388.chunk.js","mappings":"mOAuEA,UA7DgB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WAEf,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,yCAAG,2GACKC,IAAAA,IAAA,8DAAiEC,mCAAjE,oBADL,gBACVC,EADU,EACVA,KACRJ,EAAWI,EAAKC,SAFE,2CAAH,qDASnB,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACH,GAAE,KAGC,iBAAKM,UAAU,gDAAf,WAEI,gBAAKA,UAAU,gBAAf,UAEI,eAAIA,UAAU,sEAAd,wCAIJ,SAAC,IAAD,CAAiBA,UAAU,2CAA3B,gBAEKR,QAFL,IAEKA,OAFL,EAEKA,EAASS,QAAO,SAAAC,GAAW,OAAiC,OAA7BA,EAAYC,YAAhB,IAAuCC,KAAI,SAACC,EAAUC,GAAX,eAEnE,SAAC,IAAD,CAAQhB,WAAYA,EAAYiB,GAAIF,EAASE,GAA7C,UACI,iBACIP,UAAU,sDADd,eAGyBQ,IAApBH,EAASI,SAEN,gBAAKT,UAAU,8FAAf,UACI,wBAAI,UAAAK,EAASK,sBAAT,eAAyBC,MAAM,EAAG,MAAlC,UAAwCN,EAASO,oBAAjD,aAAwC,EAAuBD,MAAM,EAAG,KAAM,WAK1F,gBAAKX,UAAU,8EAAf,UACI,gBAAKA,UAAU,wGACXa,IAA+B,OAA1BR,EAASF,aAAwBW,EAAAA,GAAjC,UAAsDC,EAAAA,IAAtD,OAAoEV,EAASW,aAAeX,EAASF,cAC1Gc,IAAI,cACJC,QAAQ,YAIhB,cAAGlB,UAAU,gCAAb,SAA8CK,EAASc,OAASd,EAASe,SAnBnEd,IAHqD,OA+B3E,SAAC,IAAD,MAIX,C","sources":["components/Cards/CardBig.jsx"],"sourcesContent":["import React from 'react'\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport { halfSizeImg, imgNotAvailable } from '../../config/config'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport Button from '../Sub/Button';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport CardCorner from './CardCorner';\r\n\r\nconst CardBig = ({ media_type }) => {\r\n\r\n    const [content, setContent] = useState([])\r\n\r\n    const fetchTrending = async () => {\r\n        const { data } = await axios.get(`https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\r\n        setContent(data.results);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTrending()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"text-white flex flex-col gap-5 my-10 relative\">\r\n\r\n            <div className=\"px-4 sm:px-10\">\r\n\r\n                <h1 className=\"border-l-4 pl-2 border-yellow-500 text-lg tracking-widest font-bold\">Explore Popular Artists</h1>\r\n\r\n            </div>\r\n\r\n            <ScrollContainer className=\"px-4 sm:px-10 flex gap-3 overflow-hidden\">\r\n\r\n                {content?.filter(eachContent => eachContent.profile_path !== null).map((eachItem, index) => (\r\n\r\n                    <Button media_type={media_type} id={eachItem.id} >\r\n                        <div key={index}\r\n                            className=\"flex flex-col gap-2 w-[11rem] sm:w-[15rem] relative\">\r\n\r\n                            {eachItem.gender === undefined &&\r\n\r\n                                <div className=\"absolute text-xs sm:text-sm bg-black/70 rounded-md p-1 mt-[0.5rem] right-0 mr-[0.5rem] z-10\">\r\n                                    <p>{eachItem.first_air_date?.slice(0, 4) || eachItem.release_date?.slice(0, 4) || \"N/A\"}</p>\r\n                                </div>\r\n\r\n                            }\r\n\r\n                            <div className=\"flex w-[11rem] sm:w-[15rem] overflow-hidden rounded-md hover:cursor-pointer\">\r\n                                <img className=\"object-fill shadow-lg shadow-black duration-300 sm:hover:scale-105 sm:hover:saturate-150 aspect-[2/3]\"\r\n                                    src={eachItem.profile_path === null ? imgNotAvailable : `${halfSizeImg}${eachItem.poster_path || eachItem.profile_path}`}\r\n                                    alt=\"Reload Page\"\r\n                                    loading=\"lazy\">\r\n                                </img>\r\n                            </div>\r\n\r\n                            <p className=\"text-xs sm:text-base truncate\">{eachItem.title || eachItem.name}</p>\r\n                        </div>\r\n                    </Button>\r\n                ))}\r\n\r\n\r\n\r\n            </ScrollContainer>\r\n\r\n            <CardCorner />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardBig\r\n"],"names":["media_type","useState","content","setContent","fetchTrending","axios","process","data","results","useEffect","className","filter","eachContent","profile_path","map","eachItem","index","id","undefined","gender","first_air_date","slice","release_date","src","imgNotAvailable","halfSizeImg","poster_path","alt","loading","title","name"],"sourceRoot":""}