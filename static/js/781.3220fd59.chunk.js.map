{"version":3,"file":"static/js/781.3220fd59.chunk.js","mappings":"gHAUA,IATmB,WACf,OACI,iCACI,gBAAKA,UAAU,0HACf,gBAAKA,UAAU,yHAG1B,C,iKCgFD,UA7EsB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAE3C,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,yCAAG,2GACKC,IAAAA,IAAA,UAAaR,GAAb,OAAqBS,oCAArB,OAAqDR,IAD1D,gBACVS,EADU,EACVA,KACRJ,EAAWI,EAAKC,SAFE,2CAAH,sDAKnBC,EAAAA,EAAAA,YAAU,WACNL,GACH,GAAE,IAEH,IAAIM,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cAAgB,KAAOH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,UAE5E,OACI,iBAAKnB,UAAU,gDAAf,WAEI,gBAAKA,UAAU,gBAAf,UAEI,eAAIA,UAAU,sEAAd,SAAqFG,OAIzF,SAAC,IAAD,CAAiBH,UAAU,2CAA3B,gBAEKM,QAFL,IAEKA,OAFL,EAEKA,EAASc,QAAO,SAAAC,GAAW,OAAkC,OAA9BA,EAAYC,aAAhB,IAAwCC,KAAI,SAACC,GAAD,OAEpE,SAAC,IAAD,CAAQpB,WAAYA,EAAYqB,GAAID,EAASC,GAA7C,UACI,iBAAKzB,UAAU,sDAAf,eAEyB0B,IAApBF,EAASG,SAEN,gBAAK3B,UAAU,8FAAf,SACM,WACE,IAAM4B,EAAQ,IAAIb,KAAKC,GAKjBa,GAJQ,IAAId,KAAKS,EAASM,cAEVC,UAAYH,EAAMG,WAEb,MAE3B,OAAIF,GAAe,GACP,+BAAOA,EAAP,YAIA,mCAGf,CAhBC,MAqBV,gBAAK7B,UAAU,8EAAf,UACI,gBAAKA,UAAU,uGACXgC,IAAG,UAAKC,EAAAA,IAAL,OAAmBT,EAASF,eAC/BY,IAAI,cACJC,QAAQ,YAIhB,cAAGnC,UAAU,gCAAb,SAA8CwB,EAASrB,OAASqB,EAASY,YAnC3BC,EAAAA,EAAAA,KAFc,OA4C5E,SAAC,IAAD,MAIX,C","sources":["components/Cards/CardCorner.jsx","components/Cards/CardLandscape.jsx"],"sourcesContent":["\r\nconst CardCorner = () => {\r\n    return (\r\n        <>\r\n            <div className=\"absolute w-[10%] sm:w-[3%] h-full bg-gradient-to-r from-transparent via-[#17171b]/70 to-[#17171b] right-0 top-0 z-20\"></div>\r\n            <div className=\"absolute w-[6%] sm:w-[3%] h-full bg-gradient-to-l from-transparent via-[#17171b]/70 to-[#17171b] left-0 top-0 z-20\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardCorner\r\n","import React from 'react'\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport Button from '../Sub/Button';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport CardCorner from './CardCorner';\r\nimport { halfSizeImg } from '../../config/config';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst CardLandscape = ({ first, second, title, media_type }) => {\r\n\r\n    const [content, setContent] = useState([])\r\n\r\n    const fetchTrending = async () => {\r\n        const { data } = await axios.get(`${first}${process.env.REACT_APP_API_KEY}${second}`);\r\n        setContent(data.results);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTrending()\r\n    }, [])\r\n\r\n    var today = new Date();\r\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n\r\n    return (\r\n        <div className=\"text-white flex flex-col gap-5 my-10 relative\">\r\n\r\n            <div className=\"px-4 sm:px-10\">\r\n\r\n                <h1 className=\"border-l-4 pl-2 border-yellow-500 text-lg tracking-widest font-bold\">{title}</h1>\r\n\r\n            </div>\r\n\r\n            <ScrollContainer className=\"px-4 sm:px-10 flex gap-3 overflow-hidden\">\r\n\r\n                {content?.filter(eachContent => eachContent.backdrop_path !== null).map((eachItem) => (\r\n\r\n                    <Button media_type={media_type} id={eachItem.id} key={uuidv4()}>\r\n                        <div className=\"flex flex-col gap-2 w-[15rem] sm:w-[20rem] relative\">\r\n\r\n                            {eachItem.gender === undefined &&\r\n\r\n                                <div className=\"absolute text-xs sm:text-sm bg-black/70 rounded-md p-1 mt-[0.5rem] right-0 mr-[0.5rem] z-10\">\r\n                                    {(() => {\r\n                                        const date1 = new Date(date);\r\n                                        const date2 = new Date(eachItem.release_date);\r\n\r\n                                        const TimeDif = date2.getTime() - date1.getTime();\r\n\r\n                                        const releaseDays = TimeDif / (1000 * 3600 * 24);\r\n\r\n                                        if (releaseDays >= 1) {\r\n                                            return (<p>In {releaseDays} days</p>)\r\n                                        }\r\n\r\n                                        else {\r\n                                            return (<p>Released</p>)\r\n                                        }\r\n\r\n                                    })()}\r\n                                </div>\r\n\r\n                            }\r\n\r\n                            <div className=\"flex w-[15rem] sm:w-[20rem] overflow-hidden rounded-md hover:cursor-pointer\">\r\n                                <img className=\"object-fill shadow-lg shadow-black duration-300 sm:hover:scale-105 sm:hover:saturate-150 aspect-auto\"\r\n                                    src={`${halfSizeImg}${eachItem.backdrop_path}`}\r\n                                    alt=\"Reload Page\"\r\n                                    loading=\"lazy\">\r\n                                </img>\r\n                            </div>\r\n\r\n                            <p className=\"text-xs sm:text-base truncate\">{eachItem.title || eachItem.name}</p>\r\n                        </div>\r\n                    </Button>\r\n                ))}\r\n\r\n            </ScrollContainer>\r\n\r\n            <CardCorner />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardLandscape\r\n"],"names":["className","first","second","title","media_type","useState","content","setContent","fetchTrending","axios","process","data","results","useEffect","today","Date","date","getFullYear","getMonth","getDate","filter","eachContent","backdrop_path","map","eachItem","id","undefined","gender","date1","releaseDays","release_date","getTime","src","halfSizeImg","alt","loading","name","uuidv4"],"sourceRoot":""}